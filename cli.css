/* @group cli */

#cli
{
  /*align-items: end;*/
  background: rgb(var(--color-b));
  /*background: rgb(var(--color-front));*/
  bottom: 0;
  box-shadow: 0px -1rem 2rem 0 rgb(var(--color-b));
  display: grid;
   grid-template-areas: 
  "hide"
  "oto"
  "is";
  /*grid-template-columns: 1fr auto;*/
  /*grid-template-rows: auto auto 1fr;*/
  max-height: 4rem;
  overflow: hidden;
  position: fixed;
  /*transition: var(--trans-quart);*/
  width: 100vw;
  z-index: 9;
}
.cli_expanded #cli
{
  box-shadow: 0px -.2rem 2rem 0 rgba(var(--color-a),.5);
  /*color: rgba(var(--color-back),1);*/
 
  /*grid-template-rows: 1fr auto auto;*/
  /*grid-template-columns: 1fr;*/
  max-height: 100vh;
}

#cli_collapse
{
  align-self: stretch;
  background: rgb(var(--color-a));
  border-radius: 0;
  border: none;
  color: rgb(var(--color-f));
  cursor: pointer;
  display:  none;
  font-family: inherit;
  font-size: var(--font-size);
  grid-area: hide;
  line-height: 1.5rem;
  justify-self: stretch;
  padding: 0;
  transition: var(--trans-quart);
}
#cli_collapse:hover 
{
  background: rgb(var(--color-no));
}
.cli_expanded #cli_collapse
{
  display: block;
}

#is
{
  background: rgb(var(--color-b));
  border: none;
  box-sizing: border-box;
  color: rgb(var(--color-c));
  /*display: grid;*/
  font-family: inherit;
  font-size: 1rem;
  grid-area: is;
  -webkit-line-break: normal;
  line-height: 1.5rem;
  outline: none;
  margin: 0;
  opacity: .5;
/*  padding-top: var(--pad-l);
  padding-right: var(--pad-l);
  padding-left: var(--pad-l);
  padding-bottom: var(--pad-l);*/
  padding: var(--pad-l);
  resize: none;
  transition: var(--trans-quart);
}
#is:hover {
  opacity: 1;
}
.cli_expanded #cli #is 
{
  /*align-items: start;*/
  background: rgb(var(--color-e));
  color: rgb(var(--color-a));
  opacity: 1;
  padding: var(--line);
  /*padding: var(--pad);*/
  /*padding-left: 0;*/
}
#is::placeholder 
{
  color: inherit;
  opacity: 1;
}
.cli_expanded #cli #is::placeholder
{
  /*color: rgba(var(--color-front),.3);*/
  opacity: .3;
}

#textarea-grow-hack 
{
  box-sizing: border-box;
  display: block;
  grid-area: is;
  letter-spacing: 0;
  -webkit-line-break: normal;
  line-height: 1.5rem;
  max-height: 4rem;
  overflow: hidden;
  padding: var(--line);
  pointer-events: none;
  transition: var(--trans-quart);
  visibility: hidden;
  word-break: break-all;
  white-space: pre-wrap;
}
.cli_expanded #cli #textarea-grow-hack 
{
  max-height: 60vh;
  /*padding: calc(var(--pad)*4);*/
  /*transition: var(--trans-quart);*/
}








/* @end */

/* @group oto */

#oto 
{
  align-self: end;
  background: rgb(var(--color-e));
  display: none;
  /*font-size: var(--font-size-s);*/
  grid-area: oto;
  padding-left: var(--line);
  overflow: hidden;
  /*transform: translateY(-100%);*/
}
.cli_expanded #cli #oto
{
  display: grid;
}
#oto::before 
{
  background-color: rgba(var(--color-main),.5);
  border-bottom: 1px dotted rgb(var(--color-c));
  color: rgb(var(--color-a));
  content: attr(data-s);
  position: absolute;
  left: var(--line);
  height: 100%;
  white-space: pre;
  /*opacity: 0;*/
}


#oto .item {
  border-bottom: 1px dotted rgb(var(--color-e));
  /*color: rgb(var(--color-c));*/
  grid-template-columns: auto auto auto auto 1fr;
  grid-template-areas: "before val required optional description";
  margin: 0;
  transition: var(--trans-quart);
  user-select: none;
  /*grid-gap: var(--space);*/
}
#oto .item:focus
{
  background-color: rgba(var(--color-main),.4);
  color: rgb(var(--color-c));
  outline: none;
}
#oto .item:hover
{
  background-color: rgb(var(--color-f));
  /*color: rgb(var(--color-f));*/
}
#oto .item > * 
{
  /*user-select: none;*/
  pointer-events: none;
  border-bottom: 1px solid rgba(var(--color-c),0);
}
#oto .item::before 
{
  color: rgb(var(--color-c));
  opacity: .5;
  /*position: absolute;*/
  /*content: "-->";*/
  /*line-height: 1.5rem;*/
  /*position: absolute;*/
  /*left: 0;*/
  /*top: 0;*/
  /*padding: 0 var(--pad);*/
  /*margin-right: var(--pad);*/
}
#oto .item::after 
{
  /*color: rgb(var(--color-c));*/
  content: none;
}
#oto .item:hover::before,
#oto .item:focus::before 
{
  /*color: rgb(var(--color-f));*/
  /*content: "->>";*/
}

/*#oto .item:focus::after 
{
  color: rgb(var(--color-f));
  content: "<-- return to confirm";
}*/

#oto .item .val 
{
  color: rgb(var(--color-c));
  grid-area: val;
}

#oto .item .required 
{
  border-bottom: 1px solid rgb(var(--color-c));
  color: rgb(var(--color-c));
  /*font-style: italic;*/
  /*font-weight: bold;*/
  grid-area: required;
}

#oto .item .optional 
{
  
  color: rgb(var(--color-c));
  border-bottom: 1px dashed rgb(var(--color-c));
  /*font-style: italic;*/
  grid-area: required;
}
#oto .item .required + .optional {
  grid-area: optional;
}

#oto .item .description 
{
  align-self: center;
  justify-self: end;
  color: rgb(var(--color-c));
  font-size: var(--font-size-s);
  grid-area: description;
  padding-right: var(--pad);
}

#oto .item.pinned 
{
  background-color: rgb(var(--color-alt));
  border-bottom: 1px dotted rgb(var(--color-c));
  z-index: 1;
  pointer-events: none;
  cursor: text;
}
#oto .item.pinned > *
{
  color: rgb(var(--color-b));
}
#oto .item.pinned > .required
{
  color: rgb(var(--color-b));
}
#oto .item.pinned > .description,
#oto .item.pinned > .optional
{
  color: rgb(var(--color-c));
}

/* @end */